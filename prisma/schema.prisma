// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String    @id @default(cuid())
  username        String    @unique
  email           String    @unique
  password        String
  profileImageUrl String?
  createdAt       DateTime  @default(now())

  // --- NEW FIELD to identify business accounts ---
  isBusiness      Boolean   @default(false)

  // RELATION: A User can write many Reviews
  reviews         Review[]

  // --- NEW RELATION for owned spots ---
  ownedSpots      StudySpot[]

  // RELATIONS: Follow system
  followers       Follows[] @relation("following")
  following       Follows[] @relation("follower")
}

model StudySpot {
  id        String   @id @default(cuid())
  name      String
  address   String
  latitude  Float
  longitude Float
  type      String
  createdAt DateTime @default(now())

  // --- NEW RELATION to link a spot to a business owner ---
  // The '?' makes it optional, as some spots are admin-created
  ownerId   String?
  owner     User?    @relation(fields: [ownerId], references: [id])

  // RELATION: A StudySpot can have many Reviews
  reviews   Review[]
}

model Review {
  id        String   @id @default(cuid())
  content   String
  rating    Int
  imageUrl  String?
  createdAt DateTime @default(now())

  // RELATION: This Review belongs to one User
  userId    String
  user      User     @relation(fields: [userId], references: [id])

  // RELATION: This Review belongs to one StudySpot
  spotId    String
  spot      StudySpot @relation(fields: [spotId], references: [id])
}

// Model for the Follows relationship
model Follows {
  followerId  String
  followingId String
  follower    User   @relation("follower", fields: [followerId], references: [id])
  following   User   @relation("following", fields: [followingId], references: [id])

  @@id([followerId, followingId])
}